// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @unique @default(uuid())
  name            String
  email           String          @unique
  phone           String          @unique @db.VarChar(12)
  password        String
  role            Int //           {1 : 'Admin', 2: 'Student', 3: 'Teacher'}
  is_active       Boolean
  student_details StudentDetails? @relation(fields: [student_id], references: [id])
  teacher_details TeacherDetails? @relation(fields: [teacher_id], references: [id])
  student_id      String?         @unique
  teacher_id      String?         @unique
  created_at      DateTime        @default(now())
  Token           Token?
}

model StudentDetails {
  id              String  @unique @default(uuid())
  User            User?
  name            String
  phone           String  @db.VarChar(12)
  institute       String
  branch          String?
  standard        String?
  intrests        String?
  profile_picture String?

  created_at       DateTime          @default(now())
  CourseEnrollment CourseEnrollment?
}

model TeacherDetails {
  id              String    @unique @default(uuid())
  name            String
  phone           String    @db.VarChar(12)
  User            User?
  experience      Int
  bio             String
  profile_picture String?
  created_at      DateTime  @default(now())
  ToughtBy        ToughtBy?
}

model Course {
  id          String @unique @default(uuid())
  title       String @db.VarChar(50)
  description String
  price       Float
  validity    Int
  language    String

  created_at       DateTime          @default(now())
  ToughtBy         ToughtBy?
  CourseEnrollment CourseEnrollment?
  Section          Section[]
}

model Section {
  id        String @unique @default(uuid())
  name      String
  sr_no     Int
  course    Course @relation(fields: [course_id], references: [id])
  course_id String @default(uuid())

  created_at DateTime  @default(now())
  Content    Content[]
}

model Content {
  id         String  @unique @default(uuid())
  sr_no      Int
  title      String
  type       Int // [1 => Video, 2 => PDF]
  link       String
  section    Section @relation(references: [id], fields: [section_id])
  section_id String

  created_at DateTime @default(now())
}

model ToughtBy {
  id String @unique @default(uuid())

  course  Course         @relation(fields: [course_id], references: [id])
  teacher TeacherDetails @relation(fields: [teacher_id], references: [id])

  course_id  String @unique
  teacher_id String @unique

  created_at DateTime @default(now())
}

model CourseEnrollment {
  id String @unique @default(uuid())

  course  Course         @relation(fields: [course_id], references: [id])
  teacher StudentDetails @relation(fields: [student_id], references: [id])

  course_id  String @unique
  student_id String @unique

  start_date DateTime @default(now())
  end_date   DateTime

  created_at DateTime @default(now())
}

model Token {
  id    String @unique @default(uuid())
  token String @unique @default(uuid())

  user    User   @relation(fields: [user_id], references: [id])
  user_id String @unique
  device String?
}